{"version":3,"file":"static/js/846.98677641.chunk.js","mappings":"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","sources":["feature-module/crm/customers/Quotations.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { MdDelete, MdDragIndicator } from 'react-icons/md'\r\nimport { Link } from 'react-router-dom'\r\nimport Select from \"react-select\";\r\nimport Table from \"../../../core/common/dataTable/index\";\r\nimport { estimationListData } from '../../../core/data/json/estimationList';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport { HiEllipsisVertical } from 'react-icons/hi2';\r\nimport { FaCheck, FaEye } from 'react-icons/fa';\r\nimport DeleteModal from '../../../core/common/modals/DeleteModal';\r\nimport dragula from 'dragula';\r\nimport 'dragula/dist/dragula.css';\r\nimport { options, quotationStatus, owner as companyEmployee, discountType, quotationItems, discountOption } from '../../../core/common/selectoption/selectoption';\r\nimport { DatePicker, TimePicker } from \"antd\";\r\nimport { IoMdSettings } from 'react-icons/io';\r\n\r\n\r\n\r\nconst Quotations = ({ quotationTabClicked }) => {\r\n  console.log(quotationTabClicked, \"quotationTabClicked\");\r\n\r\n  const [showQuotationViewForm, setShowQuotationViewForm] = useState(false);\r\n  const [selectedQuotation, setSelectedQuotation] = useState(null);\r\n  const [selectedQuotationProduct, setSelectedQuotationProduct] = useState(null);\r\n  const [addedQuotationEntries, setAddedQuotationEntries] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedViewQuotation, setSelectedViewQuotation] = useState(null);\r\n  const [stars, setStars] = useState({});\r\n  const [showQuotationForm, setShowQuotationForm] = useState(false);\r\n  const [deleteModalText, setDeleteModalText] = useState(\"\");\r\n  const [selectedQuotationsStatus, setSelectedQuotationsStatus] = useState([]);\r\n  const [haveShippingAddress, setHaveShippingAddress] = useState(false);\r\n  const [indexToDelete, setIndexToDelete] = useState(null);\r\n  const [quotationQuantities, setQuotationQuantities] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [quotationQuantity, setQuotationQuantity] = useState(false);\r\n  const [quotationColumnVisibility, setQuotationColumnVisibility] = useState({\r\n    \"\": true,\r\n    \"Quotation Id\": true,\r\n    \"Client\": true,\r\n    \"Amount\": true,\r\n    \"Date\": true,\r\n    \"Expiry Date\": true,\r\n    \"Status\": true,\r\n  });\r\n  const [rows, setRows] = useState([\r\n    { id: 1, description: 'Website Design', quantity: 4, rate: 250, tax: '5%', amount: 2000 },\r\n    { id: 2, description: 'App Development', quantity: 2, rate: 200, tax: '0%', amount: 5000 },\r\n  ]);\r\n  const [quotationProduct, setQuotationProduct] = useState(\r\n    {\r\n      quotationName: '',\r\n      quotationDescription: \"\",\r\n      rate: \"\",\r\n      quantity: \"\",\r\n      tax: \"\",\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    return () => { }\r\n  }, [])\r\n\r\n\r\n  const currentDateAndTime = new Date();\r\n  const currentDate = currentDateAndTime.toLocaleDateString();\r\n  const currentTime = currentDateAndTime.toLocaleTimeString();\r\n\r\n\r\n  const handleStarToggle = (index) => {\r\n    setStars((prevStars) => ({\r\n      ...prevStars,\r\n      [index]: !prevStars[index],\r\n    }));\r\n  };\r\n\r\n  const filterQuotationsStatus = (quotationsStatus) => {\r\n    setSelectedQuotationsStatus((prevStatus) =>\r\n      prevStatus.includes(quotationsStatus)\r\n        ? prevStatus.filter((status) => status !== quotationsStatus)\r\n        : [...prevStatus, quotationsStatus]\r\n    );\r\n  };\r\n  const quotationsStatus = Object.values(\r\n    estimationListData.reduce((acc, quotation) => {\r\n      if (!acc[quotation.status]) {\r\n        acc[quotation.status] = { value: quotation.status, label: quotation.status };\r\n      }\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const filteredQuotationData = estimationListData.filter((quotation) => {\r\n\r\n    const isAnySearchColumnVisible =\r\n      quotationColumnVisibility[\"Quotation Id\"] ||\r\n      quotationColumnVisibility[\"Client\"];\r\n\r\n    const matchesSearchQuery =\r\n      !isAnySearchColumnVisible ||\r\n      (quotation.estimationsId.toLowerCase().includes(searchQuery.toLowerCase())) ||\r\n      (quotation.client.toLowerCase().includes(searchQuery.toLowerCase()))\r\n\r\n\r\n    const matchesStatus =\r\n      selectedQuotationsStatus.length === 0 ||\r\n      selectedQuotationsStatus.includes(quotation.status.toLowerCase());\r\n\r\n\r\n    // const matchesEmployee =\r\n    //   selectedEmployee.length === 0 ||\r\n    //   selectedEmployee.includes(calls.agentName.toLowerCase());\r\n\r\n\r\n\r\n    return matchesSearchQuery\r\n      && matchesStatus\r\n    // && matchesEmployee\r\n\r\n  });\r\n\r\n  const quotationColumns = [\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <div\r\n          className={`set-star rating-select ${stars[index] ? \"filled\" : \"\"}`}\r\n          onClick={() => handleStarToggle(index)}\r\n        >\r\n          <i className=\"fa fa-star\"></i>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Quotation Id\",\r\n      dataIndex: \"estimationsId\",\r\n      key: \"estimationsId\",\r\n      render: (text, record) => {\r\n\r\n        return (\r\n          <div className=\"cell-content justify-content-between\">\r\n            <div\r\n              state={{ record }}\r\n              className=\"lead-name title-name fw-bold\"\r\n              style={{ color: \"#2c5cc5\", cursor: 'pointer' }}\r\n              onClick={() => {\r\n                setShowQuotationForm(true);\r\n                setShowQuotationViewForm(false);\r\n              }}\r\n            >\r\n              {text}\r\n            </div>\r\n            <Link\r\n              to=\"#\"\r\n              className=\"action-icon\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <HiEllipsisVertical />\r\n            </Link>\r\n\r\n            <div className=\"dropdown-menu dropdown-menu-right\">\r\n              <div\r\n                className=\"dropdown-item cursor-pointer\"\r\n                onClick={() => {\r\n                  // When clicking \"View\", show the view and hide the form\r\n                  setShowQuotationViewForm(true);\r\n                  setShowQuotationForm(true);\r\n                  setSelectedViewQuotation(record)\r\n                }}\r\n              >\r\n                <FaEye className=\"text-blue\" /> View\r\n              </div>\r\n              <div\r\n                className=\"dropdown-item cursor-pointer\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target={`#delete_${deleteModalText}`}\r\n                onClick={() => { setDeleteModalText(\"quotation\") }}\r\n              >\r\n                <i className=\"ti ti-trash text-danger\"></i> Delete\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n      sorter: (a, b) => a.estimationsId.localeCompare(b.estimationsId),\r\n    },\r\n    {\r\n      title: \"Amount\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      sorter: (a, b) => a.amount.localeCompare(b.amount),\r\n    },\r\n    {\r\n      title: \"Client\",\r\n      dataIndex: \"client\",\r\n      key: \"client\",\r\n      sorter: (a, b) => a.client.localeCompare(b.client),\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n      sorter: (a, b) => a.date.localeCompare(b.date),\r\n    },\r\n    {\r\n      title: \"Expiry Date\",\r\n      dataIndex: \"expiryDate\",\r\n      key: \"expiryDate\",\r\n      sorter: (a, b) => a.expiryDate.localeCompare(b.expiryDate),\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      sorter: (a, b) => a.status.localeCompare(b.status),\r\n    },\r\n  ];\r\n  const handleToggleQuotationsColumnVisibility = (columnTitle) => {\r\n    setQuotationColumnVisibility((prevVisibility) => ({\r\n      ...prevVisibility,\r\n      [columnTitle]: !prevVisibility[columnTitle],\r\n    }));\r\n  };\r\n  const visibleQuotationColumns = quotationColumns.filter(\r\n    (column) => quotationColumnVisibility[column.title]\r\n  );\r\n\r\n  const contentRef = useRef(null);\r\n  const exportToPDF = () => {\r\n    const input = contentRef.current;\r\n    // Ensure the input element is present\r\n    if (!input) {\r\n      console.error(\"Content ref is not set or is null\");\r\n      return;\r\n    }\r\n    html2canvas(input, {\r\n      scale: 2,\r\n      allowTaint: true,  // Allow tainted images to be drawn to canvas\r\n      useCORS: true,\r\n    }).then((canvas) => {\r\n      const imgData = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF('p', 'mm', 'a4'); // Specify orientation, unit, and format\r\n\r\n      const imgWidth = 190; // Width of the image in mm\r\n      const pageHeight = pdf.internal.pageSize.height;\r\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      const heightLeft = imgHeight;\r\n\r\n      let position = 0;\r\n\r\n      pdf.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);\r\n      position += heightLeft;\r\n\r\n      // Add a new page if the content is too long\r\n      while (heightLeft >= pageHeight) {\r\n        position = heightLeft - pageHeight;\r\n        pdf.addPage();\r\n        pdf.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);\r\n      }\r\n\r\n      pdf.save('download.pdf');\r\n    }).catch((error) => {\r\n      console.error(\"Error generating PDF:\", error);\r\n    });\r\n  };\r\n\r\n  const containerRefs = [useRef(null), useRef(null), useRef(null), useRef(null)];\r\n  const tableRef = useRef(null);\r\n  useEffect(() => {\r\n    const allRefsInitialized = containerRefs.every(ref => ref.current !== null) && tableRef.current !== null;\r\n\r\n    if (allRefsInitialized) {\r\n      // Initialize Dragula only when all refs are available\r\n      const drake = dragula([...containerRefs.map(ref => ref.current), tableRef.current], {\r\n        moves: (el, container, handle) => {\r\n          // Allow dragging for DIVs in containerRefs and table rows\r\n          return (\r\n            el.tagName === 'DIV' || // Allow dragging of containers\r\n            el.tagName === 'TR' // Allow dragging of table rows\r\n          );\r\n        },\r\n      });\r\n\r\n      // Optional: add event listeners for drag events\r\n      drake.on('drop', (el, target, source, sibling) => {\r\n        console.log('Dropped:', el);\r\n      });\r\n\r\n      // Cleanup on component unmount\r\n      return () => {\r\n        drake.destroy();\r\n      };\r\n    }\r\n  }, [containerRefs, tableRef]);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleQuotationProductChange = (selectedProduct) => {\r\n    setSelectedQuotationProduct(selectedProduct);\r\n  }\r\n\r\n  const handleQuotationProductInputChange = (e) => {\r\n\r\n    const { name, value } = e.target;\r\n\r\n    // Update the respective field in the quotationProduct object\r\n    setQuotationProduct((prevProduct) => ({\r\n      ...prevProduct,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  const handleModalDeleteBtn = (text) => {\r\n    console.log(`Deleting ${indexToDelete} ${text}...`);\r\n  };\r\n\r\n  const handleAddQuotationEntry = () => {\r\n    if (selectedQuotationProduct) {\r\n      // Create a new entry\r\n      const newEntry = {\r\n        itemName: selectedQuotationProduct.quotationName,\r\n        description: selectedQuotationProduct.quotationDescription,\r\n        quantity: quotationQuantity,\r\n        rate: selectedQuotationProduct.rate,\r\n        amount: quotationQuantity * selectedQuotationProduct.rate,\r\n        // tax: \"Some Tax\", // You can adjust how you get tax data\r\n      };\r\n      // Add new entry to the addedEntries array\r\n      setAddedQuotationEntries((prevEntries) => [...prevEntries, newEntry]);\r\n      // Clear the input fields\r\n      setQuotationQuantity(0);\r\n      setSelectedQuotationProduct(null);\r\n    }\r\n  };\r\n\r\n  const tableBodyRef = useRef(null);\r\n  useEffect(() => {\r\n    if (tableBodyRef.current) {\r\n      const drake = dragula([tableBodyRef.current], {\r\n        // Only allow dragging when the handle (with class .drag-handle) is clicked\r\n        moves: (el, container, handle) => handle.classList.contains('drag-handle'),\r\n      });\r\n\r\n      drake.on('drop', (el, target, source, sibling) => {\r\n        const rows = Array.from(tableBodyRef.current.children);\r\n\r\n        setAddedQuotationEntries((prevEntries) => {\r\n          const newOrder = rows.map((row) => {\r\n            const index = row.getAttribute('data-index');\r\n            return prevEntries[Number(index)];\r\n          });\r\n          return newOrder;\r\n        });\r\n\r\n        drake.cancel(true); // Force Dragula to reset after drag and drop\r\n      });\r\n\r\n      return () => {\r\n        drake.destroy(); // Clean up dragula instance\r\n      };\r\n    }\r\n  }, [addedQuotationEntries, setAddedQuotationEntries]);\r\n\r\n  const handleQuotationQuantityChange = (index, value) => {\r\n    const newQuantities = [...quotationQuantities];\r\n    newQuantities[index] = value; // Update the specific quantity for the row\r\n    setQuotationQuantities(newQuantities); // Set the updated quantities array\r\n  };\r\n\r\n  const handleDeleteQuotationEntry = (index) => {\r\n    const updatedQuotationEntries = addedQuotationEntries.filter((_, i) => i !== index);\r\n    setAddedQuotationEntries(updatedQuotationEntries);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setSelectedQuotationsStatus([]);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const exportQuotationsToPDF = () => {\r\n    const doc = new jsPDF();\r\n\r\n    const filteredColumns = quotationColumns.filter(\r\n      (col) =>\r\n        quotationColumnVisibility[col.title]\r\n    );\r\n\r\n\r\n    const headers = filteredColumns.map((col) => col.title);\r\n    const data = filteredQuotationData.map((row) =>\r\n      filteredColumns.map((col) => row[col.dataIndex] || \"\")\r\n    );\r\n\r\n\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    const titleText = \"Tickets Report\";\r\n    const titleWidth = doc.getTextWidth(titleText);\r\n    const titleX = (pageWidth - titleWidth) / 2;\r\n\r\n    doc.setFontSize(15);\r\n    doc.text(titleText, titleX, 20);\r\n\r\n    doc.setFontSize(10);\r\n    doc.text(`Exported on: ${currentDate} at ${currentTime}`, 15, 35);\r\n\r\n\r\n    autoTable(doc, {\r\n      startY: 40,\r\n      head: [headers],\r\n      body: data,\r\n    });\r\n    doc.save(\"Ticket-details.pdf\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"quotation\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <div className=\"row align-items-center justify-content-end\">\r\n            {!showQuotationViewForm && !showQuotationForm && <div className=\"col-sm-12\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div className=\"d-flex\">\r\n                  <div className=\"icon-form mb-3  me-2 mb-sm-0\">\r\n                    <span className=\"form-icon\">\r\n                      <i className=\"ti ti-search\" />\r\n                    </span>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Search Quotations\"\r\n                      value={searchQuery}\r\n                      onChange={(text) =>\r\n                        setSearchQuery(text.target.value)\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-sorts dropdown me-2\">\r\n                    <Link\r\n                      to=\"\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                      data-bs-auto-close=\"outside\"\r\n                    >\r\n                      <i className=\"ti ti-filter-share\" />\r\n                      Filter\r\n                    </Link>\r\n                    <div className=\"filter-dropdown-menu dropdown-menu  dropdown-menu-md-end p-3\">\r\n                      <div className=\"filter-set-view\">\r\n                        <div className=\"filter-set-head\">\r\n                          <h4>\r\n                            <i className=\"ti ti-filter-share\" />\r\n                            Filter\r\n                          </h4>\r\n                        </div>\r\n                        <div className=\"accordion\" id=\"accordionExample\">\r\n                          <div className=\"filter-set-content\">\r\n                            <div className=\"filter-set-content-head\">\r\n                              <Link\r\n                                to=\"\"\r\n                                className=\"collapsed\"\r\n                                data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#Status\"\r\n                                aria-expanded=\"false\"\r\n                                aria-controls=\"Status\"\r\n                              >\r\n                                Quotation Status\r\n                              </Link>\r\n                            </div>\r\n                            <div\r\n                              className=\"filter-set-contents accordion-collapse collapse\"\r\n                              id=\"Status\"\r\n                              data-bs-parent=\"#accordionExample\"\r\n                            >\r\n                              <div className=\"filter-content-list\">\r\n                                <ul>\r\n                                  {quotationsStatus.map((quotationsStatus, index) => {\r\n                                    return (\r\n                                      <li\r\n                                        key={index}\r\n\r\n                                      >\r\n                                        <div className=\"filter-checks\" >\r\n                                          <label className=\"checkboxs\" >\r\n                                            <input\r\n                                              type=\"checkbox\"\r\n                                              checked={selectedQuotationsStatus.includes(quotationsStatus.value.toLowerCase())}\r\n                                              onChange={() => filterQuotationsStatus(quotationsStatus.value.toLowerCase())}\r\n                                            />\r\n                                            <span className=\"checkmarks\" />\r\n                                            {quotationsStatus.value}\r\n                                          </label>\r\n                                        </div>\r\n                                      </li>\r\n                                    );\r\n                                  })}\r\n\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"filter-reset-btns\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                              <Link to=\"\" className=\"btn btn-primary\" onClick={resetFilters}>\r\n                                Reset\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"dropdown\">\r\n                    <Link\r\n                      to=\"\"\r\n                      className=\"btn bg-soft-purple text-purple\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                      data-bs-auto-close=\"outside\"\r\n                    >\r\n                      <i className=\"ti ti-columns-3 me-2\" />\r\n                      Manage Columns\r\n                    </Link>\r\n                    <div className=\"dropdown-menu  dropdown-menu-md-end dropdown-md p-3\">\r\n                      <h4 className=\"mb-2 fw-semibold\">\r\n                        Want to manage datatables?\r\n                      </h4>\r\n                      <p className=\"mb-3\">\r\n                        Please drag and drop your column to reorder your\r\n                        table and enable see option as you want.\r\n                      </p>\r\n                      <div className=\"border-top pt-3\">\r\n                        {quotationColumns.map((column, index) => {\r\n                          if (\r\n                            column.title === \"\"\r\n                          ) {\r\n                            return;\r\n                          }\r\n                          return (\r\n                            <div\r\n                              className=\"d-flex align-items-center justify-content-between mb-3\"\r\n                              key={index}\r\n                            >\r\n                              <p className=\"mb-0 d-flex align-items-center\">\r\n                                <i className=\"ti ti-grip-vertical me-2\" />\r\n                                {column.title}\r\n                              </p>\r\n                              <div\r\n                                className=\"status-toggle\"\r\n\r\n                              >\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  id={column.title}\r\n                                  className=\"check\"\r\n                                  defaultChecked={true}\r\n                                  onClick={() =>\r\n                                    handleToggleQuotationsColumnVisibility(\r\n                                      column.title\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <label\r\n                                  htmlFor={column.title}\r\n                                  className=\"checktoggle\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <div className=\"dropdown me-2\">\r\n                    <Link\r\n                      to=\"\"\r\n                      className=\"dropdown-toggle\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                    >\r\n                      <i className=\"ti ti-package-export me-2\" />\r\n                      Export\r\n                    </Link>\r\n                    <div className=\"dropdown-menu  dropdown-menu-end\">\r\n                      <ul className=\"mb-0\">\r\n                        <li>\r\n                          <Link\r\n                            to=\"\"\r\n                            className=\"dropdown-item\"\r\n                            onClick={exportQuotationsToPDF}\r\n                          >\r\n                            <i className=\"ti ti-file-type-pdf text-danger me-1\" />\r\n                            Export as PDF\r\n                          </Link>\r\n                        </li>\r\n\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <Link\r\n                    to=\"\"\r\n                    data-bs-toggle=\"offcanvas\"\r\n                    data-bs-target=\"#ticket_offcanvas\"\r\n                    className=\"link-purple fw-medium\"\r\n                    onClick={() => {\r\n                      // setSelectedMeeting(null)\r\n                      // setSelectedMeetingType(null)\r\n                      setShowQuotationForm(true)\r\n                      setSelectedQuotation(null)\r\n                      setSelectedQuotationProduct(null)\r\n                      setAddedQuotationEntries([])\r\n                    }}\r\n                  >\r\n                    <i className=\"ti ti-circle-plus me-1\" />\r\n                    Add New\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            }\r\n            {\r\n              showQuotationForm && !showQuotationViewForm && <h4 className=\"fw-semibold mb-0\">Quotation</h4>\r\n            }\r\n            {\r\n              showQuotationViewForm && <div className=\"dropdown me-2\" style={{ width: 'auto' }}>\r\n                <Link\r\n                  to=\"#\"\r\n                  className=\"dropdown-toggle\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                >\r\n                  <i className=\"ti ti-package-export me-2\" />\r\n                  Export\r\n                </Link>\r\n                <div className=\"dropdown-menu  dropdown-menu-end\">\r\n                  <ul className=\"mb-0\">\r\n                    <li>\r\n                      <Link\r\n                        to=\"#\"\r\n                        className=\"dropdown-item\"\r\n                        onClick={exportToPDF}\r\n                      >\r\n                        <i className=\"ti ti-file-type-pdf text-danger me-1\" />\r\n                        Export as PDF\r\n                      </Link>\r\n                    </li>\r\n\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          {!showQuotationForm ? <div className=\"table-responsive custom-table\">\r\n            <Table\r\n              dataSource={filteredQuotationData}\r\n              columns={visibleQuotationColumns}\r\n              rowKey={(record) => record.key}\r\n            />\r\n          </div>\r\n            : showQuotationViewForm\r\n              ?\r\n              <>\r\n\r\n                <div ref={contentRef} style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\r\n                  {/* 2x2 Grid for draggable containers */}\r\n                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridGap: '20px', width: '100%' }}>\r\n\r\n                    {/* First Container */}\r\n                    <div ref={containerRefs[0]} style={{ cursor: 'grab' }}>\r\n\r\n                      <div style={{ width: 200, height: 'auto' }} className=\"mb-3\"><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTBwzaOHjVPsPvedzhKqhNXT7QJ_ru2GGTkCA&s\"\r\n                        alt=\"\" crossOrigin=\"anonymous\"\r\n                      /></div>\r\n                    </div>\r\n\r\n\r\n                    {/* Second Container */}\r\n                    <div ref={containerRefs[1]} style={{ cursor: 'grab' }}>\r\n                      <div className=\"mb-3\"><b>{selectedViewQuotation ? selectedViewQuotation.estimationsId : \"No ID Selected\"}</b></div>\r\n                      <div className=\"mb-3\">\r\n                        <b>Ship to:</b>\r\n                        <p className=\"mb-0\">Burjuman</p>\r\n                        <p className=\"mb-0\">Burjuman</p>\r\n                        <p className=\"mb-0\">Dubai, Dubai</p>\r\n                        <p className=\"mb-0\">AE 00000</p>\r\n                      </div>\r\n                    </div>\r\n                    {/* Third Container */}\r\n                    <div ref={containerRefs[2]} style={{ cursor: 'grab' }}>\r\n\r\n                      <div className=\"mb-3\">\r\n                        <b>To,</b>\r\n                        <p className=\"mb-0\">California Media</p>\r\n                        <p className=\"mb-0\">Burjuman</p>\r\n                        <p className=\"mb-0\">Dubai, Dubai</p>\r\n                        <p className=\"mb-0\">AE 00000</p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Forth Container */}\r\n                    <div ref={containerRefs[3]} style={{ cursor: 'grab' }}>\r\n                      <div className=\"mb-3\">\r\n                        <p className=\"mb-0\"><b>Estimate Date:</b> 2024-10-17</p>\r\n                        <p className=\"mb-0\"><b>Expiry Date:</b> 2024-10-17</p>\r\n                        <p className=\"mb-0\"><b>Sale Agent:</b> Waqar Ansari</p>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n\r\n                  {/* Draggable table (full width below the grid) */}\r\n                  <div>\r\n                    <table ref={tableRef} className=\"w-100 quotation-calc-table my-3\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th><MdDragIndicator className=\"drag-handle\" style={{ cursor: 'grab' }} /></th>\r\n                          <th>Item</th>\r\n                          <th>Quantity</th>\r\n                          <th>Rate</th>\r\n                          <th>Tax</th>\r\n                          <th>Amount</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {rows.map((row) => (\r\n                          <tr key={row.id}>\r\n                            <td style={{ width: 20 }}>\r\n                              <MdDragIndicator className=\"drag-handle\" style={{ cursor: 'grab' }} />\r\n                            </td>\r\n                            <td style={{ width: 250 }}>{row.description}</td>\r\n                            <td style={{ width: 100 }}>{row.quantity}</td>\r\n                            <td style={{ width: 100 }}>{row.rate}</td>\r\n                            <td>{row.tax}</td>\r\n                            <td>{row.amount}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"text-end col-md-4 offset-8\">\r\n                  <hr className=\"hr1\" />\r\n                  <b className=\"me-5\">Sub Total :</b>\r\n                  <span>2000 AED</span>\r\n                  <hr className=\"hr1\" />\r\n                  <b className=\"me-5\">Total :</b>\r\n                  <span>2000 AED</span>\r\n                </div>\r\n\r\n                <div className=\"mt-5\">\r\n                  <p>\r\n                    <b className=\"me-3\">Note :</b>\r\n                    <span>Note added for the customer</span>\r\n                  </p>\r\n                  <p>\r\n                    <b className=\"me-3\">Terms & Conditions :</b>\r\n                    <span>Terms and Conditions added for the customer</span>\r\n                  </p>\r\n                </div>\r\n              </>\r\n\r\n\r\n              :\r\n              <form>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <label className=\"col-form-label\">Company Name</label>\r\n                      </div>\r\n                      <Select\r\n                        className=\"select\"\r\n                        options={options}\r\n\r\n                        classNamePrefix=\"react-select\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <Link\r\n                  to=\"#\"\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#add_quotationAddress\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  className=\"link-purple fw-medium mb-2 d-block\"\r\n                // onClick={() => {\r\n                //   setSelectedMeeting(null)\r\n                //   setSelectedMeetingType(null)\r\n                // }}\r\n                >\r\n                  <i className=\"ti ti-circle-plus me-1\" />\r\n                  Add Billing Address\r\n                </Link>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <h4>Bill to</h4>\r\n                    <p className=\"mb-0\">Burjuman</p>\r\n                    <p className=\"mb-0\">Dubai</p>\r\n                    <p className=\"mb-0\">AE, 00000</p>\r\n                  </div>\r\n                  {haveShippingAddress && <div className=\"col-md-6 mb-3\">\r\n                    <h4>Ship to</h4>\r\n                    <p className=\"mb-0\">Burjuman</p>\r\n                    <p className=\"mb-0\">Dubai</p>\r\n                    <p className=\"mb-0\">AE, 00000</p>\r\n                  </div>}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <label className=\"col-form-label\">Estimate Date</label>\r\n                    <div className=\"icon-form-end\">\r\n                      <span className=\"form-icon\">\r\n                        <i className=\"ti ti-calendar-event\" />\r\n                      </span>\r\n                      <DatePicker\r\n                        className=\"form-control datetimepicker deals-details\"\r\n                        selected={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        dateFormat=\"dd-MM-yyyy\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <label className=\"col-form-label\">Expiry Date</label>\r\n                    <div className=\"icon-form-end\">\r\n                      <span className=\"form-icon\">\r\n                        <i className=\"ti ti-calendar-event\" />\r\n                      </span>\r\n                      <DatePicker\r\n                        className=\"form-control datetimepicker deals-details\"\r\n                        selected={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        dateFormat=\"dd-MM-yyyy\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <label className=\"col-form-label\">Status</label>\r\n                      </div>\r\n                      <Select\r\n                        className=\"select\"\r\n                        options={quotationStatus}\r\n                        classNamePrefix=\"react-select\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <label className=\"col-form-label\">Sale Agent</label>\r\n                      </div>\r\n                      <Select\r\n                        className=\"select\"\r\n                        options={companyEmployee}\r\n                        classNamePrefix=\"react-select\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mb-3\">\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <label className=\"col-form-label\">Discount Type</label>\r\n                      </div>\r\n                      <Select\r\n                        className=\"select\"\r\n                        options={discountType}\r\n                        classNamePrefix=\"react-select\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"col-form-label\">\r\n                    Admin Note\r\n                  </label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    rows={4}\r\n                    name=\"meetingDescription\"\r\n                    value=\"Admin Note\"\r\n                    onChange={(e) => { }}\r\n                  />\r\n                </div>\r\n                <Link\r\n                  to=\"#\"\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#add_quotationItem\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  className=\"link-purple fw-medium mb-2 d-inline-block\"\r\n                >\r\n                  <i className=\"ti ti-circle-plus me-1\" />\r\n                  Add New Product\r\n                </Link>\r\n                <div className=\"mb-3\">\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <label className=\"col-form-label\">Select Product</label>\r\n                  </div>\r\n                  <Select\r\n                    className=\"select\"\r\n                    options={quotationItems}\r\n                    onChange={handleQuotationProductChange}\r\n                    classNamePrefix=\"react-select\"\r\n                    // This is used for searching\r\n                    getOptionLabel={(quotationItems) => `${quotationItems.quotationName} ${quotationItems.quotationDescription}`}\r\n                    getOptionValue={(quotationItems) => quotationItems.id}\r\n                    // This is used for rendering the custom display\r\n                    formatOptionLabel={(quotationItems) => (\r\n                      <div>\r\n                        <strong>{quotationItems.quotationName}</strong>{' '}\r\n                        - {quotationItems.rate} AED, {quotationItems.quotationDescription}\r\n                      </div>\r\n                    )}\r\n                  />\r\n                </div>\r\n                <table className=\"w-100 quotation-calc-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Item</th>\r\n                      <th>Description</th>\r\n                      <th>Quantity</th>\r\n                      <th>Rate</th>\r\n                      <th>Tax</th>\r\n                      <th>Amount</th>\r\n                      <th><IoMdSettings /></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style={{ width: 250 }}>\r\n                        <input className=\"form-control\"\r\n                          name=\"quotationItemName\"\r\n                          value={selectedQuotationProduct ? selectedQuotationProduct.quotationName : \"\"}\r\n                          onChange={handleQuotationProductInputChange}\r\n                          type=\"text\" />\r\n                      </td>\r\n                      <td style={{ width: 250 }}>\r\n                        <textarea\r\n                          className=\"form-control\"\r\n                          rows={4}\r\n                          name=\"quotationDescription\"\r\n                          value={selectedQuotationProduct ? selectedQuotationProduct.quotationDescription : \"\"}\r\n                          onChange={(e) => { }}\r\n                        />\r\n                      </td>\r\n                      <td style={{ width: 100 }}>\r\n                        <input className=\"form-control\"\r\n                          name=\"quotationQuantity\"\r\n                          value={quotationQuantity}\r\n                          onChange={(e) => { }}\r\n                          type=\"number\" />\r\n                        <p className=\"text-end\">Unit</p>\r\n                      </td>\r\n                      <td style={{ width: 100 }}>\r\n                        <input className=\"form-control\"\r\n                          name=\"quotationRate\"\r\n                          value={selectedQuotationProduct ? selectedQuotationProduct.rate : \"\"}\r\n                          onChange={(e) => { }}\r\n                          type=\"number\" />\r\n                      </td>\r\n\r\n                      <td>\r\n                        <Select\r\n                          className=\"select\"\r\n                          options={discountType}\r\n                          classNamePrefix=\"react-select\"\r\n                        />\r\n                      </td>\r\n                      <td>{quotationQuantity && selectedQuotationProduct ? (quotationQuantity * selectedQuotationProduct.rate) : \"\"}</td>\r\n\r\n                      <td style={{ width: 50 }}>\r\n                        <button\r\n                          className=\"btn btn-success\"\r\n                          type=\"button\"\r\n                          onClick={() => {\r\n                            handleAddQuotationEntry(selectedQuotationProduct)\r\n                            setSelectedQuotation(null)\r\n                            setSelectedQuotationProduct(null)\r\n                          }}\r\n                        >\r\n                          <FaCheck />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                {\r\n                  addedQuotationEntries.length > 0 && (\r\n                    <table className=\"w-100 quotation-calc-table mt-3\" >\r\n                      <tbody ref={tableBodyRef}>\r\n                        {addedQuotationEntries.map((entry, index) => (\r\n                          <tr data-index={index}>\r\n                            <td style={{ width: 20 }}>\r\n\r\n                              <MdDragIndicator className=\"drag-handle\" style={{ cursor: 'grab' }} />\r\n                            </td>\r\n                            <td style={{ width: 250 }}>\r\n                              <input className=\"form-control\"\r\n                                name=\"quotationItemName\"\r\n                                value={entry.itemName}\r\n                                onChange={(e) => { }}\r\n                                type=\"text\" />\r\n                            </td>\r\n                            <td style={{ width: 250 }}>\r\n                              <textarea\r\n                                className=\"form-control\"\r\n                                rows={4}\r\n                                name=\"quotationDescription\"\r\n                                value={entry.description}\r\n                                onChange={(e) => { }}\r\n                              />\r\n                            </td>\r\n                            <td style={{ width: 100 }}>\r\n                              <input className=\"form-control\"\r\n                                name=\"quotationQuantity\"\r\n                                // value={quotationQuantities[index]}\r\n                                value={addedQuotationEntries[index].quantity}\r\n                                onChange={(e) => { handleQuotationQuantityChange(index, e.target.value) }}\r\n                                type=\"number\" />\r\n                              <p className=\"text-end\">Unit</p>\r\n                            </td>\r\n                            <td style={{ width: 100 }}>\r\n                              <input className=\"form-control\"\r\n                                name=\"quotationRate\"\r\n                                value={entry.rate}\r\n                                onChange={(e) => { }}\r\n                                type=\"number\" />\r\n                            </td>\r\n\r\n                            <td>\r\n                              <Select\r\n                                className=\"select\"\r\n                                options={discountType}\r\n                                classNamePrefix=\"react-select\"\r\n                              />\r\n                            </td>\r\n                            <td>{entry ? (addedQuotationEntries[index].quantity * entry.rate) : \"\"}</td>\r\n                            <td style={{ width: 50 }}>\r\n                              <button\r\n                                className=\"btn btn-primary\"\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                  handleDeleteQuotationEntry(index)\r\n                                }}\r\n                              >\r\n                                <MdDelete />\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  )}\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <hr className=\"hr1\" />\r\n                    <p className=\"text-end\"><b>Sub Total</b><span style={{ width: 80, display: \"inline-block\" }}>: 45678</span></p>\r\n                    <hr className=\"hr1\" />\r\n                    <p className=\"text-end d-flex align-items-start justify-content-end\">\r\n                      <b className=\"me-4\">Discount</b>\r\n                      <input className=\"form-control w-25\"\r\n                        name=\"quotationDiscount\"\r\n                        value=\"\"\r\n                        onChange={(e) => { }}\r\n                        type=\"text\" />\r\n                      <Select\r\n                        className=\"select2 custom-radius\"\r\n                        options={discountOption}\r\n                        name=\"taskType\"\r\n                        value={\"\"}\r\n                        onChange={(option) => { }}\r\n                        classNamePrefix=\"react-select\"\r\n                      />\r\n                      <span style={{ width: 80 }}>: 45678</span>\r\n                    </p>\r\n                    <hr className=\"hr1\" />\r\n                    <p className=\"text-end\"><b>Total</b><span style={{ width: 80, display: \"inline-block\" }}>: 45678</span></p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12 text-end modal-btn mt-4\">\r\n                  <Link\r\n                    to=\"#\"\r\n                    className=\"btn btn-light\"\r\n                    data-bs-dismiss=\"modal\"\r\n                  >\r\n                    Cancel\r\n                  </Link>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    data-bs-dismiss=\"modal\"\r\n                    type=\"button\"\r\n                  >\r\n                    Save changes\r\n                  </button>\r\n                </div>\r\n              </form>\r\n          }\r\n        </div>\r\n      </div>\r\n      {/* Delete Modal */}\r\n      {<DeleteModal text={deleteModalText} onDelete={() => { handleModalDeleteBtn(deleteModalText) }} onCancel={() => { setDeleteModalText(\"\") }} />}\r\n      {/* /Delete Modal */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quotations"],"names":["_ref","quotationTabClicked","console","log","showQuotationViewForm","setShowQuotationViewForm","useState","selectedQuotation","setSelectedQuotation","selectedQuotationProduct","setSelectedQuotationProduct","addedQuotationEntries","setAddedQuotationEntries","searchQuery","setSearchQuery","selectedViewQuotation","setSelectedViewQuotation","stars","setStars","showQuotationForm","setShowQuotationForm","deleteModalText","setDeleteModalText","selectedQuotationsStatus","setSelectedQuotationsStatus","haveShippingAddress","setHaveShippingAddress","indexToDelete","setIndexToDelete","quotationQuantities","setQuotationQuantities","selectedDate","setSelectedDate","Date","quotationQuantity","setQuotationQuantity","quotationColumnVisibility","setQuotationColumnVisibility","rows","setRows","id","description","quantity","rate","tax","amount","quotationProduct","setQuotationProduct","quotationName","quotationDescription","useEffect","currentDateAndTime","currentDate","toLocaleDateString","currentTime","toLocaleTimeString","quotationsStatus","Object","values","estimationListData","reduce","acc","quotation","status","value","label","filteredQuotationData","filter","matchesSearchQuery","estimationsId","toLowerCase","includes","client","matchesStatus","length","quotationColumns","title","dataIndex","render","text","record","index","_jsx","className","onClick","prevStars","handleStarToggle","children","key","_jsxs","state","style","color","cursor","Link","to","HiEllipsisVertical","FaEye","sorter","a","b","localeCompare","date","expiryDate","visibleQuotationColumns","column","contentRef","useRef","containerRefs","tableRef","every","ref","current","drake","dragula","map","moves","el","container","handle","tagName","on","target","source","sibling","destroy","handleDateChange","tableBodyRef","classList","contains","Array","from","prevEntries","row","getAttribute","Number","cancel","type","placeholder","onChange","checked","prevStatus","filterQuotationsStatus","resetFilters","defaultChecked","handleToggleQuotationsColumnVisibility","columnTitle","prevVisibility","htmlFor","exportQuotationsToPDF","doc","jsPDF","filteredColumns","col","headers","data","titleText","titleX","internal","pageSize","getWidth","getTextWidth","setFontSize","autoTable","startY","head","body","save","width","exportToPDF","input","html2canvas","scale","allowTaint","useCORS","then","canvas","imgData","toDataURL","pdf","pageHeight","height","imgHeight","heightLeft","position","addImage","addPage","catch","error","_Fragment","display","flexDirection","gap","gridTemplateColumns","gridGap","src","alt","crossOrigin","MdDragIndicator","Select","options","classNamePrefix","DatePicker","selected","dateFormat","quotationStatus","companyEmployee","discountType","name","e","quotationItems","selectedProduct","getOptionLabel","getOptionValue","formatOptionLabel","IoMdSettings","prevProduct","handleAddQuotationEntry","newEntry","itemName","FaCheck","entry","handleQuotationQuantityChange","newQuantities","updatedQuotationEntries","_","i","handleDeleteQuotationEntry","MdDelete","discountOption","option","Table","dataSource","columns","rowKey","DeleteModal","onDelete","onCancel"],"sourceRoot":""}